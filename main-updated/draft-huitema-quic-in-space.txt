



QUIC                                                          C. Huitema
Internet-Draft                                      Private Octopus Inc.
Intended status: Informational                               M. Blanchet
Expires: 11 February 2024                                       Viagenie
                                                          10 August 2023


                             QUIC in Space
                   draft-huitema-quic-in-space-latest

Abstract

   Discuss the challenges of running QUIC in space.  Incorporate results
   from Hackathon at IETF 117.  Provide guidance to implementations.

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://huitema.github.io/quic-in-space/draft-huitema-quic-in-
   space.html.  Status information for this document may be found at
   https://datatracker.ietf.org/doc/draft-huitema-quic-in-space/.

   Discussion of this document takes place on the QUIC Working Group
   mailing list (mailto:quic@ietf.org), which is archived at
   https://mailarchive.ietf.org/arch/browse/quic/.  Subscribe at
   https://www.ietf.org/mailman/listinfo/quic/.

   Source for this draft and an issue tracker can be found at
   https://github.com/huitema/quic-in-space.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 11 February 2024.

Copyright Notice

   Copyright (c) 2023 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  Timer Constants in QUIC
     3.1.  Probe Timeout and Initial RTT
     3.2.  Idle Timeout
   4.  Flow control and congestion control
     4.1.  Flow control
     4.2.  Congestion control and slow start
   5.  Implementation Guidance
   6.  Security Considerations
   7.  IANA Considerations
   8.  References
     8.1.  Normative References
     8.2.  Informative References
   Acknowledgments
   Authors' Addresses

1.  Introduction

   QUIC is a new transport bringing very interesting features that could
   enable its use in space, while TCP is not good.  However, QUIC was
   designed for terrestrial Internet, which brings assumptions on
   typical delays and connectivity.  In (deep) space, delays are much
   larger, in order of minutes (4-20 minutes to Mars), and long
   disruptions, such as because of orbital mechanics, in order minutes
   or hours or days.

   It may be possible to modify the base behavior of QUIC stacks to
   satisfy these requirements.  For example, several assumptions, such
   as initial delay, are just static constants in the code that could be
   externalized so they could better start the QUIC machinery in the
   context of space.

   The purpose of this document is to provide guidance for supporting
   space communication in QUIC implementations.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Timer Constants in QUIC

   QUIC implementations typically use a number of time related
   variables, with different characteristics.  Some may be constants
   suggested by the QUIC specification or chosen by the stack
   developers, some may be negotiated between peers, and some may be
   discovered as part of running the protocol.  We are mostly concerned
   here with the constant values, which we discuss in the following
   sections.

3.1.  Probe Timeout and Initial RTT

   As defined in [QUIC-RECOVERY], QUIC uses two mechanisms to detect
   packet losses.  The acknowledgement based method detect losses if a
   packet is not yet acknowledged while packets sent later have already
   been.  That method works well even if the transmission delay is long,
   but cannot detect the loss of the "last packet".  For that, QUIC uses
   the probe timeout defined in Section 6.2 of [QUIC-RECOVERY].  If the
   last packet is not yet acknowledged after the probe timeout, the
   endpoint sends a "probe" to trigger an acknwledgement.  The probe
   timer is initially set as a function of the measured RTT and RTTVAR.
   It is then increased exponentially as the number of unacknowledged
   repetitions increases.

   The mechanism works well if the transmission delay is long after the
   RTT has been evaluated at least once.  But before that, the probe
   timeout is set as a function of the Initial RTT, whose recommended
   value is 333 milliseconds per Section 6.2.2 of [QUIC-RECOVERY].  Many
   implementations use smaller values because waiting too long results
   in longer connection delays when losses occur.  The recommended
   initial value of 333ms results in a PTO of 1 second, but the shorter
   values used by some implementations can result in a PTO of 200 or
   250ms.  On a long delay link, we will probably see the following:

   1- Initial transmission 2- First repeat after timer (e.g. 1 second)
   3- 2nd repeat after timer (e.g., 1 second again), after which the
   timer is doubled 4- 3rd repeat after the increased (e.g., 2 seconds),
   after which the timer is doubled again 5- etc.

   If we let the process go long enough, a succession of doubling will
   probably match the required value, probably after a dozen repeats if
   the delay is about 20 minutes.  In that case, one of the dozen
   repeats will most likely be successful, but of course a lot of extra
   energy will have been expanded.  But the connection establishment
   will fail if the process is interrupted too soon, either because the
   maximum number of repeats has been reached, or because the "idle
   timer" has been exceeded.

3.2.  Idle Timeout

   The idle timeout is defined in Section 10.1 of [QUIC-TRANSPORT].
   Each peer proposes a "max_idle_timeout" value, and commits to close
   the connection if no activity happens during that timeout.  The
   "max_idle_timeout" value is often set as a constant by either the
   stack or the application using it, with typical values ranging from a
   few seconds to a few minutes.

   Short idle timeout value will interfere with space communications.

4.  Flow control and congestion control

4.1.  Flow control

4.2.  Congestion control and slow start

5.  Implementation Guidance

   TODO: pay attention to delays.

6.  Security Considerations

   TODO Security

7.  IANA Considerations

   This document has no IANA actions.

8.  References

8.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

8.2.  Informative References

   [QUIC-RECOVERY]
              Iyengar, J., Ed. and I. Swett, Ed., "QUIC Loss Detection
              and Congestion Control", RFC 9002, DOI 10.17487/RFC9002,
              May 2021, <https://www.rfc-editor.org/rfc/rfc9002>.

   [QUIC-TLS] Thomson, M., Ed. and S. Turner, Ed., "Using TLS to Secure
              QUIC", RFC 9001, DOI 10.17487/RFC9001, May 2021,
              <https://www.rfc-editor.org/rfc/rfc9001>.

   [QUIC-TRANSPORT]
              Iyengar, J., Ed. and M. Thomson, Ed., "QUIC: A UDP-Based
              Multiplexed and Secure Transport", RFC 9000,
              DOI 10.17487/RFC9000, May 2021,
              <https://www.rfc-editor.org/rfc/rfc9000>.

Acknowledgments

   TODO acknowledge.

Authors' Addresses

   Christian Huitema
   Private Octopus Inc.
   Email: huitema@huitema.net


   Marc Blanchet
   Viagenie
   Email: marc.blanchet@viagenie.ca
